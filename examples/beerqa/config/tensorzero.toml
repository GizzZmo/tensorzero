# ┌────────────────────────────────────────────────────────────────────────────┐
# │                                   MODELS                                   │
# └────────────────────────────────────────────────────────────────────────────┘


[models."gpt-4o-mini"]
routing = ["openai"]

[models."gpt-4o-mini".providers.openai]
type = "openai"
model_name = "gpt-4o-mini-2024-07-18"

[models."gpt-4o"]
routing = ["openai"]

[models."gpt-4o".providers.openai]
type = "openai"
model_name = "gpt-4o-2024-08-06"


# ┌────────────────────────────────────────────────────────────────────────────┐
# │                                 FUNCTIONS                                  │
# └────────────────────────────────────────────────────────────────────────────┘

[functions.beerqa_solver]
type = "chat"
system_schema = "functions/beerqa_solver/system_schema.json"
tools = ["get_summary", "get_full_text", "submit_answer"]
tool_choice = "required"

[functions.beerqa_solver.variants.baseline]
weight = 1
type = "chat_completion"
model = "gpt-4o-mini"
system_template = "functions/beerqa_solver/baseline/system_template.minijinja"
json_mode = "strict"

[functions.beerqa_solver.variants.gpt4o]
weight = 1
type = "chat_completion"
model = "gpt-4o"
system_template = "functions/beerqa_solver/baseline/system_template.minijinja"
json_mode = "strict"

[functions.final_answer]
type = "json"
system_schema = "functions/final_answer/system_schema.json"
output_schema = "functions/final_answer/output_schema.json"

[functions.final_answer.variants.baseline]
weight = 1
type = "chat_completion"
model = "gpt-4o-mini"
system_template = "functions/final_answer/baseline/system_template.minijinja"
json_mode = "strict"

[functions.final_answer.variants.gpt4o]
weight = 1
type = "chat_completion"
model = "gpt-4o"
system_template = "functions/final_answer/baseline/system_template.minijinja"
json_mode = "strict"

[functions.grade_answer]
type = "json"
user_schema = "functions/grade_answer/user_schema.json"
output_schema = "functions/grade_answer/output_schema.json"

[functions.grade_answer.variants.baseline]
weight = 1
type = "chat_completion"
model = "gpt-4o"
system_template = "functions/grade_answer/baseline/system_template.minijinja"
user_template = "functions/grade_answer/baseline/user_template.minijinja"
json_mode = "strict"

[functions.heuristic_evaluation]
type = "json"
system_schema = "functions/heuristic_evaluation/system_schema.json"
output_schema = "functions/heuristic_evaluation/output_schema.json"

[functions.heuristic_evaluation.variants.baseline]
weight = 1
type = "chat_completion"
model = "gpt-4o-mini"
system_template = "functions/heuristic_evaluation/baseline/system_template.minijinja"
json_mode = "strict"

# ┌────────────────────────────────────────────────────────────────────────────┐
# │                                  METRICS                                   │
# └────────────────────────────────────────────────────────────────────────────┘

[metrics.exact_match]
type = "boolean"
level = "episode"
optimize = "max"


# ┌────────────────────────────────────────────────────────────────────────────┐
# │                                    TOOLS                                   │
# └────────────────────────────────────────────────────────────────────────────┘

[tools.get_summary]
description = "Get a summary of a Wikipedia page with a specified title. This tool returns None if the page does not exist."
parameters = "tools/get_summary.json"

[tools.get_full_text]
description = "Get the full text of a Wikipedia page with a specified title. This tool returns None if the page does not exist."
parameters = "tools/get_full_text.json"

[tools.submit_answer]
description = "Submit the final answer to the user."
parameters = "tools/submit_answer.json"
